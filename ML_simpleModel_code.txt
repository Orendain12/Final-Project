# Initial imports.
import pandas as pd
from path import Path
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix, accuracy_score, classification_report

# Loading data
file_path = Path("../Resources/causes_of_death.csv")
df_death = pd.read_csv(file_path)
df_death.head()

# Define the features data set.
X = df_death.copy()
X = X.drop(Age-adjusted Death Rate, axis=1)
X.head()

# Define the target data set.
y = df_death["Age-adjusted Death Rate"].ravel()
y[:5]

# Splitting into Train and Test data sets.
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)

# Creating a StandardScaler instance.
scaler = StandardScaler()

# Fitting the Standard Scaler on training data.
X_scaler = scaler.fit(X_train)

# Scaling data.
X_train_scaled = X_scaler.transform(X_train)
X_test_scaled = X_scaler.transform(X_test)

# Random forest classifier.
rf_model = RandomForestClassifier(n_estimators=128, random_state=42) 

# Fit model
rf_model = rf_model.fit(X_train_scaled, y_train)

# Making predictions with testing data.
predictions = rf_model.predict(X_test_scaled)

# Calculating the confusion matrix.
cm = confusion_matrix(y_test, predictions)

# Create a DataFrame from the confusion matrix.
cm_df = pd.DataFrame(
    cm, index=["Actual 0", "Actual 1"], columns=["Predicted 0", "Predicted 1"])

cm_df